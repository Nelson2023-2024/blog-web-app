// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  AUTHOR
  ADMIN
}

model User {
  id         String   @id @default(cuid()) // Using CUID instead of Int
  email      String   @unique
  fullName   String
  userName   String   @unique
  password   String
  bio        String?
  profilePic String?
  role       Role     @default(AUTHOR)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  posts Post[]
  likes Like[] // A user can like multiple posts
}

model Post {
  id          String   @id @default(cuid()) // Using CUID instead of Int
  title       String
  content     String?
  featuredImg String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  author   User   @relation(fields: [authorId], references: [id])
  authorId String // Match the User ID type

  likes Like[] // A post can have multiple likes
}

model Like {
  id     String  @id @default(cuid())
  User   User?   @relation(fields: [userId], references: [id])
  userId String?

  Post   Post?   @relation(fields: [postId], references: [id])
  postId String?

  @@unique([userId, postId]) //Ensures a user can like a post only once
}
